version: 2.1

jobs:
  CIphase:
    docker:
      - image: circleci/python:3.7.3-stretch
      
    working_directory: ~/cloud-devops-capstone
    
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Install dependencies
          command: |
            make setup
            source ~/.cloud-devops-capstone/bin/activate
            make install
            
      - save_cache:
          paths:
            - ./cloud-devops-capstone
          key: v1-dependencies-{{ checksum "requirements.txt" }}
            
      - run:
          name: Run lint
          command: |
            source ~/.cloud-devops-capstone/bin/activate
            make lint
            
      - run:
          name: Security scan
          command: |
            source ~/.cloud-devops-capstone/bin/activate
            safety check
      
      - setup_remote_docker:
          version: 20.10.2
      
      - run:
          name: Build & Publish new image
          command: |
            docker build --tag capstone-test .
            docker image ls
            echo "${DOCKER_PASS}" | docker login --username ${DOCKER_ID} --password-stdin
            docker image tag capstone-test ${DOCKER_ID}/capstone-test
            docker push ${DOCKER_ID}/capstone-test
            

  CDphase:
    docker:
      - image: amazon/aws-cli
      
    working_directory: ~/cloud-devops-capstone
    
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
      
      - run: 
          name: Install kubectl
          command: |
            wget -O kubectl https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      
      - run:
          name: Link to cluster
          command: |
            aws eks --region ${AWS_DEFAULT_REGION} update-kubeconfig --name my-capstone-cluster # Make sure the aws-cli is set up properly I guess?
            kubectl get svc
      
      - run:
          name: Deploy cluster (Conditionally?)
          command: |
            kubectl apply -f capstone-deployment.yml # May want to do this conditionally
            kubectl get svc
            kubectl get pods
            
      - run:
          name: Perform rolling update
          command: |
            kubectl set image deployment/capstone-deployment capstone-deployment=tadhgdowney/capstone-test
            kubectl get all
  
workflows:
  cicd-pipeline:
    jobs:
      - CIphase
      - CDphase:
          requires:
            - CIphase